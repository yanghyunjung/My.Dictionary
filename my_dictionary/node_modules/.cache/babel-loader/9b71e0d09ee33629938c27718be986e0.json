{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/hyunjung/Project_01/my_dictionary/my_dictionary/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"/Users/hyunjung/Project_01/my_dictionary/my_dictionary/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject,_templateObject2;import React,{useState}from'react';import styled from'styled-components';import DictPage from'./DictPage';import DictList from'./DictList';import{loadDictFB,addBucketFB}from'./redux/modules/dict';import{firestore}from'./firebase';// 함수형 리덕스는 =\n// useSelect(리덕스에 있는 상태값 가져오기), useDispatch(리덕스 스토어에 상태 넣기)\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),list=_useState2[0],setList=_useState2[1];React.useEffect(function(){//useEffect는 componentDidMount랑 update 두 기능을 같이 한다!!\n},[]);var addBtn=function addBtn(){setList(!list);};return/*#__PURE__*/_jsxs(Container,{children:[list?/*#__PURE__*/_jsx(DictList,{setList:setList}):/*#__PURE__*/_jsx(DictPage,{}),/*#__PURE__*/_jsx(Plusbtn,{onClick:addBtn,children:\"+\"})]});};var Plusbtn=styled.button(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n\\tcolor: white;\\n\\tbackground-color: #4b3d37;\\n\\tborder-radius: 100px;\\n\\tmargin-left: 215px;\\n\\tfont-size: 50px;\\n\\tfont-weight: 650;\\n\\tborder: none;\\n\\twidth: 60px;\\n\\theight: 60px;\\n\"])));var Container=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n\\tmax-width: 280px;\\n\\tmin-height: 80vh;\\n\\tbackground-color: #967a6e;\\n\\tpadding: 16px;\\n\\tmargin: 20px auto;\\n\\tborder-radius: 5px;\\n\\tborder: 1px solid #ddd;\\n\"])));export default App;","map":{"version":3,"sources":["/Users/hyunjung/Project_01/my_dictionary/my_dictionary/src/App.js"],"names":["React","useState","styled","DictPage","DictList","loadDictFB","addBucketFB","firestore","App","list","setList","useEffect","addBtn","Plusbtn","button","Container","div"],"mappings":"+YAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAASC,UAAT,CAAqBC,WAArB,KAAwC,sBAAxC,CAEA,OAASC,SAAT,KAA0B,YAA1B,CAEA;AACA;wFAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,eACOP,QAAQ,CAAC,IAAD,CADf,wCACVQ,IADU,eACJC,OADI,eAGhBV,KAAK,CAACW,SAAN,CAAgB,UAAK,CAAE;AAEtB,CAFD,CAEE,EAFF,EAID,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACpBF,OAAO,CAAC,CAACD,IAAF,CAAP,CACA,CAFD,CAGA,mBACC,MAAC,SAAD,YACEA,IAAI,cAAG,KAAC,QAAD,EAAU,OAAO,CAAEC,OAAnB,EAAH,cAAoC,KAAC,QAAD,IAD1C,cAEC,KAAC,OAAD,EAAS,OAAO,CAAEE,MAAlB,eAFD,GADD,CAMA,CAhBD,CAkBA,GAAMC,CAAAA,OAAO,CAAGX,MAAM,CAACY,MAAV,6PAAb,CAWA,GAAMC,CAAAA,SAAS,CAAGb,MAAM,CAACc,GAAV,uOAAf,CAUA,cAAeR,CAAAA,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport styled from 'styled-components';\nimport DictPage from './DictPage';\nimport DictList from './DictList';\nimport { loadDictFB, addBucketFB } from './redux/modules/dict';\n\nimport { firestore } from './firebase';\n\n// 함수형 리덕스는 =\n// useSelect(리덕스에 있는 상태값 가져오기), useDispatch(리덕스 스토어에 상태 넣기)\n\nconst App = () => { \n\tconst [list, setList] = useState(true);\n\n  React.useEffect(()=> { //useEffect는 componentDidMount랑 update 두 기능을 같이 한다!!\n    \n  },[])\n\n\tconst addBtn = () => {\n\t\tsetList(!list);\n\t};\n\treturn (\n\t\t<Container>\n\t\t\t{list ? <DictList setList={setList} /> : <DictPage />}\n\t\t\t<Plusbtn onClick={addBtn}>+</Plusbtn>\n\t\t</Container>\n\t);\n};\n\nconst Plusbtn = styled.button`\n\tcolor: white;\n\tbackground-color: #4b3d37;\n\tborder-radius: 100px;\n\tmargin-left: 215px;\n\tfont-size: 50px;\n\tfont-weight: 650;\n\tborder: none;\n\twidth: 60px;\n\theight: 60px;\n`;\nconst Container = styled.div`\n\tmax-width: 280px;\n\tmin-height: 80vh;\n\tbackground-color: #967a6e;\n\tpadding: 16px;\n\tmargin: 20px auto;\n\tborder-radius: 5px;\n\tborder: 1px solid #ddd;\n`;\n\nexport default App;"]},"metadata":{},"sourceType":"module"}