{"ast":null,"code":"var _jsxFileName = \"/Users/hyunjung/Project_01/my_dictionary/my_dictionary/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport DictPage from './DictPage';\nimport DictList from './DictList';\nimport { loadDictFB } from './redux/modules/dict';\nimport { firestore } from './firebase'; // 함수형 리덕스는 =\n// useSelect(리덕스에 있는 상태값 가져오기), useDispatch(리덕스 스토어에 상태 넣기)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [list, setList] = useState(true);\n  React.useEffect(() => {//useEffect는 componentDidMount랑 update 두 기능을 같이 한다!!\n    // this.props.load();\n    // const dict = firestore.collection(\"dicts\");\n    // dict.doc(\"dict_item1\").set({text: \"만반잘부\", explain: \"잘 부탁드린다는 말\", example: \"여러분 만반잘부 입니다!\"});\n    // dict.doc(\"dict_item1\").get().then((doc) => {\n    //   if(doc.exists){\n    //     console.log(doc);\n    //     console.log(doc.data());\n    //     console.log(doc.id);\n    //   }\n    //   console.log(doc.exists);\n    // });\n    // dict.get().then(docs => {\n    //   let dict_data = [];\n    //   docs.forEach((doc) => {\n    //     if(doc.exists){\n    //       dict_data = [...dict_data, {id: doc.id, ...doc.data()}];\n    //     }\n    //   });\n    //   console.log(dict_data);\n    // });\n    // dict.add({text:\"2000원 비싸졌다\", explain:\"팩폭 했다는 말\", example:\"너 2000원 비싸졌네\",}).then((docRef)=>{\n    //   console.log(docRef);\n    //   console.log(docRef.id);\n    // });\n    // dict.doc(\"dict_item1\").update({text: \"양현정\", explain: \"양현정이라는 말\", example: \"양현저엉\"})\n    // dict.doc(\"dict_item2\").delete().then(docRef => {\n    //   console.log(\"지웠어요!\");\n    // });\n  }, []);\n\n  const addBtn = () => {\n    setList(!list);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [list ? /*#__PURE__*/_jsxDEV(DictList, {\n      setList: setList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this) : /*#__PURE__*/_jsxDEV(DictPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 45\n    }, this), /*#__PURE__*/_jsxDEV(Plusbtn, {\n      onClick: addBtn,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"Wj8Hu0D8E1aVEcPVCW1eS1xRmtg=\");\n\n_c = App;\nconst Plusbtn = styled.button`\n\tcolor: white;\n\tbackground-color: #4b3d37;\n\tborder-radius: 100px;\n\tmargin-left: 215px;\n\tfont-size: 50px;\n\tfont-weight: 650;\n\tborder: none;\n\twidth: 60px;\n\theight: 60px;\n`;\n_c2 = Plusbtn;\nconst Container = styled.div`\n\tmax-width: 280px;\n\tmin-height: 80vh;\n\tbackground-color: #967a6e;\n\tpadding: 16px;\n\tmargin: 20px auto;\n\tborder-radius: 5px;\n\tborder: 1px solid #ddd;\n`;\n_c3 = Container;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Plusbtn\");\n$RefreshReg$(_c3, \"Container\");","map":{"version":3,"sources":["/Users/hyunjung/Project_01/my_dictionary/my_dictionary/src/App.js"],"names":["React","useState","styled","DictPage","DictList","loadDictFB","firestore","App","list","setList","useEffect","addBtn","Plusbtn","button","Container","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,UAAT,QAA2B,sBAA3B;AAEA,SAASC,SAAT,QAA0B,YAA1B,C,CAEA;AACA;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;AAECD,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAK,CAAE;AACrB;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACD,GAtCD,EAsCE,EAtCF;;AAwCD,QAAMC,MAAM,GAAG,MAAM;AACpBF,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACA,GAFD;;AAGA,sBACC,QAAC,SAAD;AAAA,eACEA,IAAI,gBAAG,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEC;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAoC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAD1C,eAEC,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEE,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAMA,CApDD;;GAAMJ,G;;KAAAA,G;AAsDN,MAAMK,OAAO,GAAGV,MAAM,CAACW,MAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMD,O;AAWN,MAAME,SAAS,GAAGZ,MAAM,CAACa,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMD,S;AAUN,eAAeP,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport styled from 'styled-components';\nimport DictPage from './DictPage';\nimport DictList from './DictList';\nimport { loadDictFB } from './redux/modules/dict';\n\nimport { firestore } from './firebase';\n\n// 함수형 리덕스는 =\n// useSelect(리덕스에 있는 상태값 가져오기), useDispatch(리덕스 스토어에 상태 넣기)\n\nconst App = () => { \n\tconst [list, setList] = useState(true);\n\n  React.useEffect(()=> { //useEffect는 componentDidMount랑 update 두 기능을 같이 한다!!\n    // this.props.load();\n    \n    // const dict = firestore.collection(\"dicts\");\n\n    // dict.doc(\"dict_item1\").set({text: \"만반잘부\", explain: \"잘 부탁드린다는 말\", example: \"여러분 만반잘부 입니다!\"});\n\n    // dict.doc(\"dict_item1\").get().then((doc) => {\n    //   if(doc.exists){\n    //     console.log(doc);\n    //     console.log(doc.data());\n    //     console.log(doc.id);\n    //   }\n    //   console.log(doc.exists);\n    // });\n\n    // dict.get().then(docs => {\n    //   let dict_data = [];\n\n    //   docs.forEach((doc) => {\n    //     if(doc.exists){\n    //       dict_data = [...dict_data, {id: doc.id, ...doc.data()}];\n    //     }\n    //   });\n\n    //   console.log(dict_data);\n    // });\n\n    // dict.add({text:\"2000원 비싸졌다\", explain:\"팩폭 했다는 말\", example:\"너 2000원 비싸졌네\",}).then((docRef)=>{\n    //   console.log(docRef);\n    //   console.log(docRef.id);\n    // });\n\n    // dict.doc(\"dict_item1\").update({text: \"양현정\", explain: \"양현정이라는 말\", example: \"양현저엉\"})\n\n    // dict.doc(\"dict_item2\").delete().then(docRef => {\n    //   console.log(\"지웠어요!\");\n    // });\n  },[])\n\n\tconst addBtn = () => {\n\t\tsetList(!list);\n\t};\n\treturn (\n\t\t<Container>\n\t\t\t{list ? <DictList setList={setList} /> : <DictPage />}\n\t\t\t<Plusbtn onClick={addBtn}>+</Plusbtn>\n\t\t</Container>\n\t);\n};\n\nconst Plusbtn = styled.button`\n\tcolor: white;\n\tbackground-color: #4b3d37;\n\tborder-radius: 100px;\n\tmargin-left: 215px;\n\tfont-size: 50px;\n\tfont-weight: 650;\n\tborder: none;\n\twidth: 60px;\n\theight: 60px;\n`;\nconst Container = styled.div`\n\tmax-width: 280px;\n\tmin-height: 80vh;\n\tbackground-color: #967a6e;\n\tpadding: 16px;\n\tmargin: 20px auto;\n\tborder-radius: 5px;\n\tborder: 1px solid #ddd;\n`;\n\nexport default App;"]},"metadata":{},"sourceType":"module"}