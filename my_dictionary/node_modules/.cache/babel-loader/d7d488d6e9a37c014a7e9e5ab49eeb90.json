{"ast":null,"code":"import _objectSpread from\"/Users/hyunjung/Project_01/my_dictionary/my_dictionary/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/hyunjung/Project_01/my_dictionary/my_dictionary/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{firestore}from\"../../firebase\";var dict_db=firestore.collection(\"dict\");//Actions\nvar LOAD='dict/LOAD';var CREATE='dict/CREATE';var initialState={list:[{id:1,text:'ㅎ1ㅎ1',explain:\"히히를 변형한 단어. 숫자 1을 'ㅣ'로 쓴다.\",example:'저 친구가 초콜릿을 줬어. ㅎ1ㅎ1.'}]};export var loadDict=function loadDict(dict){return{type:LOAD,dict:dict};};export var createDict=function createDict(dict){return{type:CREATE,dict:dict};};export var loadDictFB=function loadDictFB(){return function(dispatch){dict_db.get().then(function(docs){var dict_data=[];docs.forEach(function(doc){if(doc.exists){dict_data=[].concat(_toConsumableArray(dict_data),[_objectSpread({id:doc.id},doc.data())]);}});console.log(dict_data);dispatch(loadDict(dict_data));});};};export var addDictFB=function addDictFB(dict){return function(dispatch){var dict_item={text:dict};dict_db.add(dict_item).then(function(docRef){dict_item=_objectSpread(_objectSpread({},dict_item),{},{id:docRef.id});dispatch(createDict(dict_item));});};};// export const updateDictFB = (dict) => {\n// \treturn function(dispatch, getState){\n// \t\tconst _dict_data = getState().dict.list[dict];\n// \t\tlet dict_data = {..._dict_data};\n// \t\tdict_db.doc(dict_data.id).update(dict_data).then(docRef => {\n// \t\t\tdispatch(updateDictFB(dict));\n// \t\t});\n// \t}\n// }\n//Reducer\nexport default function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};switch(action.type){case'dict/LOAD':{if(action.dict.length>0){return{list:action.bucket};}return state;}case'dict/CREATE':{var new_dict_list=[].concat(_toConsumableArray(state.list),[action.dict]);console.log(new_dict_list);return _objectSpread(_objectSpread({},state),{},{list:new_dict_list});}default:return state;}}","map":{"version":3,"sources":["/Users/hyunjung/Project_01/my_dictionary/my_dictionary/src/redux/modules/dict.js"],"names":["firestore","dict_db","collection","LOAD","CREATE","initialState","list","id","text","explain","example","loadDict","dict","type","createDict","loadDictFB","dispatch","get","then","docs","dict_data","forEach","doc","exists","data","console","log","addDictFB","dict_item","add","docRef","reducer","state","action","length","bucket","new_dict_list"],"mappings":"iWAAA,OAAQA,SAAR,KAAwB,gBAAxB,CAEA,GAAMC,CAAAA,OAAO,CAAGD,SAAS,CAACE,UAAV,CAAqB,MAArB,CAAhB,CAEA;AACA,GAAMC,CAAAA,IAAI,CAAG,WAAb,CACA,GAAMC,CAAAA,MAAM,CAAG,aAAf,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACpBC,IAAI,CAAE,CAAC,CAAEC,EAAE,CAAE,CAAN,CAASC,IAAI,CAAE,MAAf,CAAuBC,OAAO,CAAE,4BAAhC,CAA8DC,OAAO,CAAE,sBAAvE,CAAD,CADc,CAArB,CAIA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAU,CACjC,MAAO,CAAEC,IAAI,CAAEV,IAAR,CAAcS,IAAI,CAAJA,IAAd,CAAP,CACA,CAFM,CAIP,MAAO,IAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACF,IAAD,CAAU,CACnC,MAAO,CAAEC,IAAI,CAAET,MAAR,CAAgBQ,IAAI,CAAJA,IAAhB,CAAP,CACA,CAFM,CAIP,MAAO,IAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAC/B,MAAO,UAAUC,QAAV,CAAmB,CAEzBf,OAAO,CAACgB,GAAR,GAAcC,IAAd,CAAmB,SAACC,IAAD,CAAU,CAC5B,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CAEAD,IAAI,CAACE,OAAL,CAAa,SAACC,GAAD,CAAS,CACrB,GAAGA,GAAG,CAACC,MAAP,CAAc,CACdH,SAAS,8BAAOA,SAAP,kBAAmBb,EAAE,CAAEe,GAAG,CAACf,EAA3B,EAAkCe,GAAG,CAACE,IAAJ,EAAlC,GAAT,CACC,CACD,CAJD,EAMAC,OAAO,CAACC,GAAR,CAAYN,SAAZ,EACAJ,QAAQ,CAACL,QAAQ,CAACS,SAAD,CAAT,CAAR,CACA,CAXD,EAYA,CAdD,CAeA,CAhBM,CAkBP,MAAO,IAAMO,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACf,IAAD,CAAU,CAClC,MAAO,UAAUI,QAAV,CAAmB,CACzB,GAAIY,CAAAA,SAAS,CAAG,CAACpB,IAAI,CAAEI,IAAP,CAAhB,CAEAX,OAAO,CAAC4B,GAAR,CAAYD,SAAZ,EAAuBV,IAAvB,CAA4B,SAAAY,MAAM,CAAI,CACrCF,SAAS,gCAAOA,SAAP,MAAkBrB,EAAE,CAAEuB,MAAM,CAACvB,EAA7B,EAAT,CACAS,QAAQ,CAACF,UAAU,CAACc,SAAD,CAAX,CAAR,CACA,CAHD,EAIA,CAPD,CAQA,CATM,CAWP;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA,cAAe,SAASG,CAAAA,OAAT,EAAoD,IAAnCC,CAAAA,KAAmC,2DAA3B3B,YAA2B,IAAb4B,CAAAA,MAAa,2DAAJ,EAAI,CAClE,OAAQA,MAAM,CAACpB,IAAf,EACC,IAAK,WAAL,CAAkB,CACjB,GAAGoB,MAAM,CAACrB,IAAP,CAAYsB,MAAZ,CAAqB,CAAxB,CAA0B,CACzB,MAAO,CAAC5B,IAAI,CAAE2B,MAAM,CAACE,MAAd,CAAP,CACA,CAEA,MAAOH,CAAAA,KAAP,CACD,CAED,IAAK,aAAL,CAAoB,CACnB,GAAMI,CAAAA,aAAa,8BAAOJ,KAAK,CAAC1B,IAAb,GAAmB2B,MAAM,CAACrB,IAA1B,EAAnB,CACAa,OAAO,CAACC,GAAR,CAAYU,aAAZ,EACA,sCACIJ,KADJ,MAEC1B,IAAI,CAAE8B,aAFP,GAIA,CACD,QACC,MAAOJ,CAAAA,KAAP,CAlBF,CAoBA","sourcesContent":["import {firestore} from \"../../firebase\";\n\nconst dict_db = firestore.collection(\"dict\");\n\n//Actions\nconst LOAD = 'dict/LOAD';\nconst CREATE = 'dict/CREATE';\n\nconst initialState = {\n\tlist: [{ id: 1, text: 'ㅎ1ㅎ1', explain: \"히히를 변형한 단어. 숫자 1을 'ㅣ'로 쓴다.\", example: '저 친구가 초콜릿을 줬어. ㅎ1ㅎ1.'}],\n};\n\nexport const loadDict = (dict) => {\n\treturn { type: LOAD, dict };\n};\n\nexport const createDict = (dict) => {\n\treturn { type: CREATE, dict };\n};\n\nexport const loadDictFB = () => {\n\treturn function (dispatch){\n\n\t\tdict_db.get().then((docs) => {\n\t\t\tlet dict_data = [];\n\t\t\t\n\t\t\tdocs.forEach((doc) => {\n\t\t\t\tif(doc.exists){\n\t\t\t\tdict_data = [...dict_data, {id: doc.id, ...doc.data()}];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconsole.log(dict_data);\n\t\t\tdispatch(loadDict(dict_data));\n\t\t});\n\t};\n};\n\nexport const addDictFB = (dict) => {\n\treturn function (dispatch){\n\t\tlet dict_item = {text: dict};\n\n\t\tdict_db.add(dict_item).then(docRef => {\n\t\t\tdict_item = {...dict_item, id: docRef.id};\n\t\t\tdispatch(createDict(dict_item));\n\t\t})\n\t}\n}\n\n// export const updateDictFB = (dict) => {\n// \treturn function(dispatch, getState){\n// \t\tconst _dict_data = getState().dict.list[dict];\n\t\t\n// \t\tlet dict_data = {..._dict_data};\n\n// \t\tdict_db.doc(dict_data.id).update(dict_data).then(docRef => {\n// \t\t\tdispatch(updateDictFB(dict));\n// \t\t});\n// \t}\n// }\n\n//Reducer\nexport default function reducer(state = initialState, action = {}) {\n\tswitch (action.type) {\n\t\tcase 'dict/LOAD': {\n\t\t\tif(action.dict.length > 0){\n\t\t\t\treturn {list: action.bucket};\n\t\t\t}\n\n\t\t\t\treturn state;\n\t\t}\n\n\t\tcase 'dict/CREATE': {\n\t\t\tconst new_dict_list = [...state.list, action.dict,];\n\t\t\tconsole.log(new_dict_list);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlist: new_dict_list,\n\t\t\t};\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}"]},"metadata":{},"sourceType":"module"}